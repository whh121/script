# Flink应用工程开发规则
# =====================================

## 🎯 项目概述
这是一个企业级Apache Flink应用工程，包含多个实时数据处理项目：
- **kafka2doris**: Kafka到Doris的流处理管道
- **mysql2doris**: MySQL到Doris的CDC和批处理同步
- 完整的监控和告警系统
- 标准化的项目结构和配置管理

## 📋 代码规范

### 项目结构规范
1. **标准化目录结构**
   ```
   flink_app/
   ├── [项目名]/
   │   ├── README.md              # 项目详细文档
   │   ├── scripts/               # SQL脚本和Shell脚本
   │   ├── configs/               # 配置文件
   │   ├── logs/                  # 日志文件
   │   ├── docs/                  # 项目文档
   │   ├── tests/                 # 测试文件
   │   └── checkpoints/           # Flink检查点存储
   ```

2. **文件命名规范**
   - **生产环境SQL**: `{source}_to_{target}_production.sql`
   - **测试SQL**: 放入 `tests/` 目录，命名为 `test_*.sql`
   - **监控脚本**: `*_monitor.py` 或 `*_monitor.sh`
   - **配置脚本**: `setup_*.sh`

### SQL文件规范
1. **生产环境配置**
   - 禁用 `SET sql-client.execution.result-mode=TABLEAU;` （仅用于调试）
   - 必须包含完整的checkpoint配置
   - 使用固定延迟重启策略: `restart-strategy = fixed-delay`
   - 设置合理的超时时间和重试次数

2. **检查点配置 (项目独立)**
   ```sql
   -- 使用项目独立的相对路径
   SET 'state.checkpoints.dir' = 'file://./flink_app/[项目名]/checkpoints';
   SET 'execution.checkpointing.interval' = '60s';
   SET 'execution.checkpointing.mode' = 'EXACTLY_ONCE';
   SET 'execution.checkpointing.timeout' = '600s';
   SET 'state.backend' = 'filesystem';
   ```

3. **字段类型映射**
   ```
   MySQL → Flink 类型映射：
   - bigint → BIGINT
   - int/tinyint → INT
   - varchar/text → STRING  
   - datetime/timestamp → TIMESTAMP(3)
   - decimal → DECIMAL(10,2)
   
   Kafka JSON → Flink 类型映射：
   - number → BIGINT/INT/DECIMAL
   - string → STRING
   - timestamp → TIMESTAMP(3)
   - boolean → BOOLEAN
   ```

4. **表结构验证**
   - 在编写SQL前必须验证真实的数据库表结构
   - 使用 `DESCRIBE table_name` 或脚本获取准确schema
   - 字段名和类型必须与源表完全匹配

### Python脚本规范
1. **编码和导入**
   ```python
   #!/usr/bin/env python3
   # -*- coding: utf-8 -*-
   ```

2. **日志配置**
   - 必须同时输出到文件和控制台
   - 使用统一的日志格式: `%(asctime)s - %(levelname)s - %(message)s`
   - 日志文件存放在项目的 `logs/` 目录
   - 按天切割: `monitor_YYYYMMDD.log`

3. **异常处理**
   - 所有外部调用必须包含异常处理
   - 网络请求设置合理的timeout (30秒)
   - 失败时发送告警通知
   - 最大重试次数: 3次

4. **告警集成**
   - 统一使用飞书机器人webhook: `https://open.larksuite.com/open-apis/bot/v2/hook/3bb8fac6-6a02-498e-804f-48b1b38a6089`
   - 成功和失败都要有通知
   - 告警消息包含时间戳和详细错误信息
   - 避免重复告警 (使用状态文件)

### Shell脚本规范
1. **脚本头部**
   ```bash
   #!/bin/bash
   # 脚本描述和用途
   # 作者和更新时间
   ```

2. **路径处理**
   ```bash
   # 使用动态路径检测
   SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
   PROJECT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
   ```

3. **错误处理**
   - 使用 `set -e` 遇错即停
   - 重要操作前检查前置条件
   - 提供清晰的错误信息

## 🗂️ 配置管理

### 环境配置
1. **MySQL连接**
   - 生产库: `xme-prod-rds-content.chkycqw22fzd.ap-southeast-1.rds.amazonaws.com:3306`
   - 用户: `content-ro` / 密码: `k5**^k12o`
   - 数据库: `content_data_20250114`

2. **Kafka集群 (AWS MSK)**
   ```
   b-1.xmeprodlog.o53475.c3.kafka.ap-southeast-1.amazonaws.com:9092
   b-2.xmeprodlog.o53475.c3.kafka.ap-southeast-1.amazonaws.com:9092  
   b-3.xmeprodlog.o53475.c3.kafka.ap-southeast-1.amazonaws.com:9092
   ```

3. **Doris集群**
   - 生产: `172.31.0.82:8030` / `root` / `JzyZqbx!309`
   - 测试: `10.10.41.243:8030` / `root` / `doris@123`

### 标准Checkpoint配置
```sql
SET 'execution.checkpointing.interval' = '60s';
SET 'execution.checkpointing.mode' = 'EXACTLY_ONCE';
SET 'execution.checkpointing.timeout' = '600s';
SET 'state.backend' = 'filesystem';
SET 'restart-strategy' = 'fixed-delay';
SET 'restart-strategy.fixed-delay.attempts' = '3';
SET 'restart-strategy.fixed-delay.delay' = '30s';
```

## 📊 监控规范

### 监控指标
1. **Flink集群健康状态** - HTTP API检查
2. **作业运行状态** - RUNNING/FAILED/CANCELED状态监控
3. **Kafka消费延迟** - 实时lag监控 (kafka2doris)
4. **MySQL CDC延迟** - binlog位点监控 (mysql2doris)
5. **Doris写入成功率** - 写入性能和错误监控
6. **数据同步延迟** - 端到端延迟监控

### 监控频率
- **kafka2doris**: 60秒间隔检查
- **mysql2doris**: 5分钟健康检查，15分钟完整监控
- **集群状态**: 每次检查都验证

### 告警策略
- **立即告警**: 作业失败、集群异常
- **恢复通知**: 自动重启成功
- **定期报告**: 同步完成状态
- **状态管理**: 避免重复告警

### 监控脚本要求
- 检查间隔可配置
- 最大失败次数: 3次
- 自动重启能力
- 完整的日志记录
- 状态文件管理

## 🚀 部署规范

### 生产部署检查清单
- [ ] SQL文件schema验证完成
- [ ] 去除调试模式配置 (`TABLEAU` 模式)
- [ ] 检查点路径配置正确 (项目独立相对路径)
- [ ] 告警webhook配置正确
- [ ] 监控脚本权限设置正确 (`chmod +x`)
- [ ] 日志目录可写
- [ ] 网络连接测试通过
- [ ] 项目README.md文档完整

### 启动命令标准
```bash
# Flink集群
cd /opt/flink && ./bin/start-cluster.sh

# kafka2doris流处理作业
cd /home/ubuntu/work/script
flink sql-client -f flink_app/kafka2doris/scripts/kafka_to_doris_production.sql

# mysql2doris CDC作业
flink sql-client -f flink_app/mysql2doris/scripts/mysql_sync.sql

# 监控脚本
cd flink_app/kafka2doris && ./scripts/start_monitor.sh start
cd flink_app/mysql2doris && ./scripts/setup_monitor_cron.sh
```

## 🐛 故障排查

### 常见问题
1. **Schema不匹配**: 使用脚本验证真实表结构
2. **连接失败**: 检查网络和认证信息
3. **Checkpoint失败**: 检查路径权限和磁盘空间
4. **内存不足**: 调整TaskManager配置
5. **Kafka消费延迟**: 检查分区数和并行度配置
6. **Doris写入失败**: 检查表结构和数据格式

### 日志位置
- **Flink日志**: `/opt/flink/log/`
- **项目监控日志**: `flink_app/[项目名]/logs/monitor_*.log`
- **项目同步日志**: `flink_app/[项目名]/logs/*_sync.log`
- **检查点**: `flink_app/[项目名]/checkpoints/`

### 调试工具
```bash
# 检查Flink作业状态
flink list
curl http://localhost:8081/jobs

# 检查Kafka连通性
kafka-console-consumer --bootstrap-server [broker] --topic [topic] --from-beginning

# 检查MySQL连通性
mysql -h [host] -P [port] -u [user] -p

# 检查Doris连通性
mysql -h [host] -P 9030 -u [user] -p
```

## 📝 文档维护

### README.md要求
- 每个SQL文件的状态标记 (✅ 可用 / ⚠️ 测试中 / ❌ 废弃)
- 详细的使用说明和部署步骤
- 完整的配置参数说明
- 故障排除指南
- 环境配置和依赖说明

### 代码注释
- SQL文件必须包含用途、状态、注意事项
- Python脚本必须有类和方法的文档字符串
- 关键配置项必须有注释说明
- Shell脚本必须有操作说明

## 🔒 安全规范

### 敏感信息
- 密码使用占位符或环境变量
- 生产配置不提交到版本控制
- 日志中不输出敏感信息
- 使用 `.gitignore` 忽略敏感文件

### 权限控制
- 脚本文件设置合适的执行权限 (`chmod +x`)
- 日志文件限制访问权限
- 检查点目录权限控制
- 配置文件只读权限

## 📈 性能优化

### Flink调优
- 根据数据量调整并行度
- 优化缓冲区大小和内存配置
- 设置合理的checkpoint间隔 (60s)
- 监控资源使用情况

### 数据库优化
- 使用分区提高查询效率
- 批量写入优化
- 连接池配置
- 索引优化建议

### Kafka优化
- 分区数与并行度匹配
- 合理的批量大小
- 消费者组配置
- 监控消费延迟

## 🔄 项目管理

### 添加新项目
1. 创建标准目录结构
2. 复制模板文件和配置
3. 更新主README.md
4. 配置独立检查点路径
5. 编写项目文档

### 版本控制
- 使用语义化版本号
- 重要变更记录在CHANGELOG
- 标记文件状态 (生产/测试/废弃)
- 定期清理废弃文件

### 测试规范
- 所有SQL脚本提供测试版本
- 监控脚本包含单元测试
- 部署前完整功能测试
- 性能基准测试

---
## 🔄 更新记录
- **2025-05-28**: 重构为flink_app工程，支持多项目管理
- **2025-05-28**: 实现项目独立检查点管理
- **2025-05-27**: 完善kafka2doris和mysql2doris项目规范
- **2025-05-27**: 更新监控和告警系统规范 